on:
  delete:

env:
  BRANCH_NAME: ${{ github.event.ref }}

jobs:
  remove-test:
    if: contains(github.event.pull_request.labels.*.name, 'testing')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    name: Delete Cloudflare Page
    steps:
      - name: Set Project Name
        run: |
          export NAME=$(echo ${{ env.BRANCH_NAME }} | tr -d -c '[:alnum:]' | tr '[:upper:]' '[:lower:]')
          echo "PROJECT_NAME=${NAME:0:10}" >> $GITHUB_ENV

      - name: Delete project if present
        uses: actions/github-script@v6
        with:
          script: |
            fetch('https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/pages/projects/${{ env.PROJECT_NAME }}', {
              method: 'GET',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ${{ secrets.CF_PAGES_API_TOKEN }}'
              },
            })
            .then(r => r.json())
            .then(r => {
              if (!r.success) {
                console.log(r)
                process.exit(1)
              } else if (!r.result) {
                // project not created
                return
              }
              fetch('https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/pages/projects/${{ env.PROJECT_NAME }}', {
                method: 'DELETE',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': 'Bearer ${{ secrets.CF_PAGES_API_TOKEN }}'
                },
              })
              .then(r => r.json())
              .then(r => {
                if (!r?.success) {
                  console.log(r)
                  process.exit(1)
                }
              })
            })
